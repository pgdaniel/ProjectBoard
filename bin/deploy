#!/bin/bash
set -e

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

# Load environment variables from .env if it exists
if [ -f "$PROJECT_ROOT/.env" ]; then
    echo "Loading environment from .env..."
    set -a
    source "$PROJECT_ROOT/.env"
    set +a
else
    echo "Warning: .env file not found at $PROJECT_ROOT/.env"
    echo "Copy .env.example to .env and fill in your values:"
    echo "  cp $PROJECT_ROOT/.env.example $PROJECT_ROOT/.env"
    exit 1
fi

# Docker configuration
DOCKER_REGISTRY_USER="${DOCKER_REGISTRY_USER:-pgdaniel}"
RAILS_IMAGE="$DOCKER_REGISTRY_USER/project_board:latest"
REACT_IMAGE="$DOCKER_REGISTRY_USER/project-board-react:latest"

echo "=== Building Docker Images ==="
echo ""

# Build Rails image
echo "Building Rails image: $RAILS_IMAGE"
docker build -t "$RAILS_IMAGE" "$PROJECT_ROOT"
if [ $? -ne 0 ]; then
    echo "Error: Failed to build Rails image"
    exit 1
fi

echo ""
echo "Docker images built successfully"
echo ""

# Push images to Docker Hub if credentials are available
if [ -n "$DOCKER_PASSWORD" ]; then
    echo "Pushing images to Docker Hub..."
    echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USER" --password-stdin
    docker push "$RAILS_IMAGE"
    echo "Images pushed successfully"
    echo ""
else
    echo "Warning: DOCKER_PASSWORD not set. Images will not be pushed to Docker Hub."
    echo "Images will be used locally for deployment."
    echo ""
fi

# Run the Ansible deployment
exec "$SCRIPT_DIR/deploy-ansible.sh"
